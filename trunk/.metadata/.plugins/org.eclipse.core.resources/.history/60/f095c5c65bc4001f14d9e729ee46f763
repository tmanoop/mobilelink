import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.security.SignatureException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;

import sun.misc.BASE64Encoder;
public class Signature {
	
    protected static final String DATEFORMAT_AWS = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
	private static final String HMAC_SHA1_ALGORITHM = "HmacSHA1";
	private static final long seconds = 60;
	/**
	 * @param args
	 * @throws UnsupportedEncodingException 
	 * @throws SignatureException 
	 */
	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		String url1 = "https://s3.amazonaws.com/manoop.talasila/video1.html?";
		String accessKeyId = "AKIAJEL3KU5F3TKX6WUA";
		String secretKey = "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";
		StringBuffer urlBuffer = getURI(url1,accessKeyId,secretKey);
	}

	public static StringBuffer getURI(String AWS_BASE_URL, String accessKeyId, String secretKey) throws SignatureException, UnsupportedEncodingException {
		
		String timestamp = getTimestampFromLocalTime(Calendar.getInstance().getTime());
		
		long currenttime = System.currentTimeMillis()/1000;
		long temp = 1000;
		long futuretime = currenttime + seconds;
		String expire = String.valueOf(futuretime);
        String signature = generateSignature(timestamp, secretKey);
		
		StringBuffer urlBuffer = new StringBuffer(AWS_BASE_URL);
		urlBuffer.append("AWSAccessKeyId=");
       	urlBuffer.append(accessKeyId);
       	urlBuffer.append("&Expires=");
       	urlBuffer.append(URLEncoder.encode(expire, "UTF-8"));
       	urlBuffer.append("&Signature=");
       	urlBuffer.append(URLEncoder.encode(signature, "UTF-8"));

       	System.out.println("\nMaking request URI: "+urlBuffer.toString()+"\n");
		return urlBuffer;
	}
	
	 public static String getTimestampFromLocalTime(Date date) {
	        SimpleDateFormat format = new SimpleDateFormat(DATEFORMAT_AWS);
	        format.setTimeZone(TimeZone.getTimeZone("GMT"));
	        return format.format(date);
	    }
	 
	 public static String generateSignature(String data, String key) throws java.security.SignatureException {
			String result;
			try {
				// get an hmac_sha1 key from the raw key bytes
				SecretKeySpec signingKey = new SecretKeySpec(key.getBytes(),
						HMAC_SHA1_ALGORITHM);

				// get an hmac_sha1 Mac instance and initialize with the signing key
				Mac mac = Mac.getInstance(HMAC_SHA1_ALGORITHM);
				mac.init(signingKey);

				// compute the hmac on input data bytes
				byte[] rawHmac = mac.doFinal(data.getBytes());

				// base64-encode the hmac
				// result = Encoding.EncodeBase64(rawHmac);
				result = new BASE64Encoder().encode(rawHmac);

			} catch (Exception e) {
				throw new SignatureException("Failed to generate HMAC : "
						+ e.getMessage());
			}
			return result;
		}
}
